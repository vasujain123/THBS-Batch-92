Database Querry....29/11/2021


SELECT * FROM boot_camp.emp;
SELECT * FROM emp;
SELECT * FROM emp WHERE id=1;
SELECT salary FROM emp WHERE name='sataya';


===================================

SQL:
==========
1. mysql> show schemas; // Display all available databases(schemas) inside the DBMS.
2. mysql> use <dbName>; // Now user will enter in to the database.
3. mysql> show tables;  // Display all available tables(relations) inside the Database.
4. mysql> create table <tbl_name> (id, name VARCHAR(50), age, salary); // Create table without PK
4. mysql> create table <tbl_name> (id INT, name VARCHAR(50), age int, salary DOUBLE,  PRIMARY KEY (id)); // Create table with PK
5. mysql> INSERT INTO emp  (name, age, salary) VALUES ('Sapna', 23, 2345.0); // Insert values into the Table
6. mysql> SELECT * FROM emp;
8. mysql> SELECT * FROM emp WHERE id=2;
9. mysql> SELECT salary FROM emp WHERE NAME='Shadab';


=====================================

task:-

Product
    1. name
    2. category
    3. price
    4. quantity
    5. expiry_date
    6. discount
    7. id -> PK -> auto_increment
	
	
	
	CREATE TABLE `boot_camp`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  `price` DOUBLE NOT NULL,
  `quantity` INT NOT NULL,
  `expiry_date` DATE NOT NULL,
  `discount` INT NOT NULL,
  PRIMARY KEY (`id`));
  
  
  INSERT queery:--
  
  
  INSERT INTO `boot_camp`.`product` (`name`, `category`, `price`, `quantity`, `expiry_date`, `discount`)
  VALUES('potato chips', 'food', '40', '2', '2022-02-13', '5');
  
  INSERT INTO product (name, category, price, quantity, expiry_date, discount)
  VALUES('iPhone 13 Mini', 'Electronics', 49999, 5, CURDATE()-1, 10);
    
	SELECT * FROM product WHERE discount = '5';
	
	=============
	use of like queery: SELECT * FROM product WHERE category LIKE '%Fash%';
	=================================
	
	use of order by:
	
	SELECT * FROM product ORDER BY price DESC;
	SELECT * FROM product ORDER BY price ASC;
	
	=================================
	
	SELECT SUM(price) FROM product;
	SELECT avg(price) FROM product;
	
==================================================================================================================
												30-11-2021
==================================================================================================================
	
	
	Create table for customers & orders:
	
	CREATE TABLE IF NOT EXISTS `customers` (
  `CustomerID` int NOT NULL AUTO_INCREMENT,
  `CustomerName` varchar(50) DEFAULT NULL,
  `ContactName` varchar(50) DEFAULT NULL,
  `Country` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`CustomerID`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

 

-- Dumping data for table boot_camp.customers: ~0 rows (approximately)
/*!40000 ALTER TABLE `customers` DISABLE KEYS */;
INSERT INTO `customers` (`CustomerID`, `CustomerName`, `ContactName`, `Country`) VALUES
    (1, 'SatyaPrakash', '0070070071', 'USA'),
    (2, 'Ankit', '9988776655', 'UK'),
    (3, 'Pranjal', '1234567890', 'Canada');
/*!40000 ALTER TABLE `customers` ENABLE KEYS */;

 

-- Dumping structure for table boot_camp.orders
CREATE TABLE IF NOT EXISTS `orders` (
  `OrderID` int NOT NULL AUTO_INCREMENT,
  `CustomerID` int DEFAULT NULL,
  `OrderDate` date DEFAULT NULL,
  PRIMARY KEY (`OrderID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10311 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

 

-- Dumping data for table boot_camp.orders: ~0 rows (approximately)
/*!40000 ALTER TABLE `orders` DISABLE KEYS */;
INSERT INTO `orders` (`OrderID`, `CustomerID`, `OrderDate`) VALUES
    (10308, 2, '2018-11-30'),
    (10309, 3, '2019-11-19'),
    (10310, 5, '2021-04-06');
/*!40000 ALTER TABLE `orders` ENABLE KEYS */
	
=====================================
	
	Use of joins:-
	
SELECT customers.CustomerID, customers.CustomerName, customers.ContactName, customers.Country, orders.OrderDate
FROM orders INNER JOIN customers WHERE customers.CustomerID = orders.CustomerID;
 
SELECT customers.CustomerID, customers.CustomerName, customers.ContactName, customers.Country, orders.OrderDate
FROM customers INNER JOIN orders WHERE customers.CustomerID = orders.CustomerID;
 
SELECT customers.CustomerID, customers.CustomerName, customers.ContactName, customers.Country, orders.OrderDate
FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID;
 
SELECT customers.CustomerID, customers.CustomerName, customers.ContactName, customers.Country, orders.OrderDate
FROM orders LEFT JOIN customers ON customers.CustomerID = orders.CustomerID;
 
SELECT customers.CustomerID, customers.CustomerName, customers.ContactName, customers.Country, orders.OrderDate
FROM orders RIGHT JOIN customers ON customers.CustomerID = orders.CustomerID;
	

======================================


    task:

    1. Find Distinc category.://     SELECT DISTINCT category FROM product;
	
    2. Maximum discount.: //  SELECT MAX(discount) From product;
	
    3. price for redmi?://  SELECT price FROM product WHERE name= 'redmi';
	
	
	=========================================================================================================================
															01/12/21
	=========================================================================================================================
	task: e-commerce
	
	
	CREATE TABLE `e_commerce`.`users` (
  `user_id` INT NOT NULL,
  `userscol` VARCHAR(45) NOT NULL,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`, `userscol`));
  
  CREATE TABLE `e_commerce`.`products` (
  `product_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT(225) NOT NULL,
  `catagory_id` INT NOT NULL,
  `quantity` VARCHAR(45) NOT NULL,
  `brand` VARCHAR(45) NOT NULL,
  `model` VARCHAR(45) NOT NULL,
  `configuration` VARCHAR(45) NOT NULL,
  `price` VARCHAR(45) NOT NULL,
  `featured` INT NOT NULL,
  PRIMARY KEY (`product_id`));


CREATE TABLE `e_commerce`.`catagory` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `details` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));
  
  
  CREATE TABLE `e_commerce`.`contact` (
  `contact_id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`contact_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);
  
  CREATE TABLE `e_commerce`.`orders` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `shipping_address` VARCHAR(225) NOT NULL,
  `shipping_date` DATE NOT NULL,
  `shipping_status` VARCHAR(45) NOT NULL,
  `created_at` INT NOT NULL,
  PRIMARY KEY (`order_id`));
  
  CREATE TABLE `e_commerce`.`order_details` (
  `order_details_id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`order_details_id`));
  
  
  CREATE TABLE `e_commerce`.`sales` (
  `sales_id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `sales_amount` INT NOT NULL,
  `created_at` INT NOT NULL,
  PRIMARY KEY (`sales_id`));
  
  
  =====================================
  use of alter command and add 2 columns:
  
  SELECT * FROM boot_camp.emp;
ALTER TABLE `boot_camp`.`emp` 
ADD COLUMN `contact_no.` INT NOT NULL AFTER `salary`,
ADD COLUMN `email` VARCHAR(45) NOT NULL AFTER `contact_no.`;

  
  